---
/* CTF 1.8 */
typealias integer { size = 8; align = 8; signed = false; base = 10; } := uint8_t;
typealias integer { size = 16; align = 8; signed = false; base = 10; } := uint16_t;
typealias integer { size = 32; align = 32; signed = false; base = hex; } := uint32_t;



trace {
	major = 1;
	minor = 8;
	uuid = "2a6422d0-6cee-11e0-8c08-cb07d7b3a564";
	byte_order = le;
	packet.header := struct {
		uint32_t magic;
		uint8_t  uuid[16];
	};
};

/* Enum can be nameless */
event {
	name = string;
	fields := struct {
			uint32_t A[uint32_t];
	};
};
---
[20:1] In `event` root block:
[22:2] In the `fields` scope:
[22:12] In `struct` block:
[23:4] While parsing body of `struct` block:
[23:15] Expecting valid constant integer (static-length array type) or valid data location (dynamic-length array type):
[23:15] Invalid relative data location (`uint32_t`): cannot find `uint32_t` (first element).
