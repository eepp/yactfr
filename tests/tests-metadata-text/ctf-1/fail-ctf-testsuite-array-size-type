---
/* CTF 1.8 */
typealias integer { size = 8; align = 8; signed = false; base = 10; } := uint8_t;
typealias integer { size = 16; align = 8; signed = false; base = 10; } := uint16_t;
typealias integer { size = 32; align = 32; signed = false; base = hex; } := uint32_t;

trace {
	major = 1;
	minor = 8;
	uuid = "2a6422d0-6cee-11e0-8c08-cb07d7b3a564";
	byte_order = le;
	packet.header := struct {
		uint32_t magic;
		uint8_t  uuid[0x10];
	};
};

typedef uint32_t A[uint32_t];
---
[17:1] In data type alias:
[17:20] Expecting valid constant integer (static-length array type) or valid data location (dynamic-length array type):
[17:20] First element of data location, `uint32_t`, refers to an identifier which crosses a data type alias (or named structure/variant type) boundary. CTF 1.8 allows this, but this version of yactfr doesn't support it.
